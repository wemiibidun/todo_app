{"ast":null,"code":"var _jsxFileName = \"/Users/wemi/Desktop/react_projects/todo/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //this is always the first step to create a component\n\nimport { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) =>\n  /*#__PURE__*/\n  // this checks if todo is complete or not (toggles if its complete or not)\n  _jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/wemi/Desktop/react_projects/todo/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAiC,gBAAjC;AACA,SAAQC,MAAR,QAAsB,gBAAtB;;;AAGA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAd,EAA6D;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAY;AACR,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAGF,IAAjB;AAAuB,MAAA,QAAQ,EAAII;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP;AAAA;AACb;AACA;AACI,IAAA,SAAS,EAAID,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADzD;AAAA,4BAKC;AAAqB,MAAA,OAAO,EAAI,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAAlD;AAAA,gBACKI,IAAI,CAACG;AADV,OAAYH,IAAI,CAACJ,EAAjB;AAAA;AAAA;AAAA;AAAA,YALD,eASC;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA,8BACI,QAAC,iBAAD;AACA,QAAA,OAAO,EAAI,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CAD3B;AAEA,QAAA,SAAS,EAAG;AAFZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,MAAD;AACG,QAAA,OAAO,EAAI,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEI,IAAI,CAACJ,EAAV;AAAcC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAA1B,SAAD,CAD3B;AAEG,QAAA,SAAS,EAAG;AAFf;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA,KAEWF,KAFX;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AA0BH;;GA7CQZ,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React from 'react'; //this is always the first step to create a component\nimport {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport {RiCloseCircleLine } from 'react-icons/ri';\nimport {TiEdit } from 'react-icons/ti';\n\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    })\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null,\n            value: ''\n        })\n    }\n\n    if (edit.id){\n        return <TodoForm edit ={edit} onSubmit = {submitUpdate} />;\n    }\n\n\n    return todos.map((todo, index) => (\n        // this checks if todo is complete or not (toggles if its complete or not)\n        <div \n            className = {todo.isComplete ? 'todo-row complete' : 'todo-row'} \n            key = {index}\n        > \n         {/* this creates your todo tags */}\n         <div key = {todo.id} onClick = {() => completeTodo(todo.id)}>\n             {todo.text}\n         </div>\n\n         <div className = 'icons'>\n             <RiCloseCircleLine \n             onClick = {() => removeTodo(todo.id)} \n             className = 'delete-icon'\n             />\n             \n             <TiEdit \n                onClick = {() => setEdit({id: todo.id, value: todo.text})} \n                className = 'edit-icon'\n             />\n         </div>\n\n\n        </div>\n    ));\n}\n\nexport default Todo\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}